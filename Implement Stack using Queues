class MyStack{
	LinkedList <Integer> queue1 = new LinkedList<>();
	LinkedList <Integer> queue2 = new LinkedList<>();
	
	public MyStack(){
		
	}
	
	public void push(int x){
		queue2.addLast(x);
	}
	
	public int pop(){
		queue1.clear();
		while(!queue2.isEmpty())
			queue1.addFirst(queue2.removeFirst());
		int top = queue1.removeFirst();
		
		while(!queue1.isEmpty())
			queue2.addFirst(queue1.removeFirst());
		return top;
	}
	
	public int top(){
		queue1.clear();
		while(!queue2.isEmpty())
			queue1.addFirst(queue2.removeFirst());
		int top = queue1.peekFirst();
		while(!queue1.isEmpty())
			queue2.addFirst(queue1.removeFirst());
		return top;
	}
	
	public boolean empty(){
		return queue2.isEmpty();
	}
	
}